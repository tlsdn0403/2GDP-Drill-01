파이썬은 컴파일이 필요없다
파이썬은 훌륭한 계산기이다
파이썬은 변수의 타입을 굳이 선언 할 필요가 없다
int,float,str,bool 이 기본 자료형 문자는 길이가 1인 문자열
변수의 자료형이 자연스럽게 바뀜 :: (동적 자료형)
아스키 코드 상에서 소문자가 더 큼 (대문자가 먼저 나옴)
배열의 마지막은 [-1] (맨끝에서 두번째는  [-2]
파이썬을 파이썬처럼 쓰려면 슬라이스 기능이 매우 중요함

**게임이랑 가상 월드에 존재하는 여러 객체들의 상호작용이다**

가상 월드에서 상호작용을 랜더링 하는것

플레폼 종속적인 방법: 그플렛폼에서만 실행됨

게임만들 때 배경에 이미지를 찍으려면 투명한 부분을 지정할 수 있는 png를 사용
png는 투명한 정보를 넣을 수 있음
jpg은 원래 이미지에 손실이 있는 압축 (사진을 찍고 파일로 저장함에 있어 센서로 들어온 데이터를 그대로 저장이 아니라 용량을 줄이기 위해 압축을 함 압축을 할 때 이미지와 이미지 사이의 정확하게 표시하지않은 부분이 있다면 옮겨버림 "손실압축"을 함) 평소같으면 눈치를 못채겠지만 게임은 압축을 해버리면 경계부분이 많이 깨지는데 캐릭터의 경계를 압축하면 뭉그러진다
png는 압축을 할 때 손실하지 않고 압축을 한다.zip은 압축을 했다가 복구 했을 때 원래 데이터가 그대로 복구가 됨 "무손실압축"이다


그래픽 카드의 역할: 그래픽 연산을 빠르게 처리한다, 버퍼라는 메모리가 들어있는데 화면의 해상도에 맞게 버퍼에 있는 데이터를 점하나씩 모니터에 보낸다(화면에 대응되는 크기의 메모리를 가짐) 
모니터의 2배의 메모리가 들어있음 (그 이유는 무대 뒷편에 셋업하고 그리듯이 뒤ㅣ에 마련되어있는 임시의 버퍼에 그림)

2D 게임:현재 진행 중인 게임 가상 월드의 내용을 화면에 2D 그림으로 보여주는 것


객체는 그 게임에서 필요하는 만큼만 가져온다  갯수를 결정해줘야함 
게임에서 산소입자 하나하나를 가져와야 하는가?? 필요할 수도 있다 케바케
이러한 과정을 객체지향 프로그래밍에서 추상화라고 함
추상화: 필요한만큼 뽑아 쓰겠다
객체가 가지고 있는 속성을 필요한 것만 뽑아서 사용을 한다. 모든 객체의 속성을 표현할 필요도 없고 할 수도 없다.

클래스: 객체를 생성하는데 필요한 틀
속성과 속성값은 다른 개념이다 키와 175

도출과 행위에 근거해서 클래스를 만든다 게임의 루프를 돌린다
객체 시뮬, 업데이트, 드로우 해서 보여준다


개발관점에서 가장 먼저 개발해야될 객체는 플레이어 캐릭터 (제일 중요하고 어려움)

로딩타임이 길면안됨 

생성자는 객체의 초깃값을 찍어냄 
 클래스 변수: 클래스에 딱 하나밖에 존재함, 모든 다른 객체들로부터 공유된다

상태: 어떤 조건을 만족하는 동안 머무르면서, 정해진 일을 수행하고 이벤트를 기다리는 상황
상태 변환 : 상태가 왔다갔다 하는 거 이벤트에 의해서 일어난다

이벤트: 상태변화를 일으키는 원인






